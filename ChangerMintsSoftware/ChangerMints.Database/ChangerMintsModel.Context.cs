//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChangerMints.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ChangerMintsEntities : DbContext
    {
        public ChangerMintsEntities()
            : base("name=ChangerMintsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AddressProof> AddressProofs { get; set; }
        public DbSet<Beneficiary> Beneficiaries { get; set; }
        public DbSet<ChangerBlockList> ChangerBlockLists { get; set; }
        public DbSet<ChangerUpdatedDetail> ChangerUpdatedDetails { get; set; }
        public DbSet<ChangerWrongNFCEntry> ChangerWrongNFCEntries { get; set; }
        public DbSet<CustomerAccountDetail> CustomerAccountDetails { get; set; }
        public DbSet<CustomerDetail> CustomerDetails { get; set; }
        public DbSet<CustomerNFCTagDetail> CustomerNFCTagDetails { get; set; }
        public DbSet<CustomerTransactionDetail> CustomerTransactionDetails { get; set; }
        public DbSet<Log> Logs { get; set; }
        public DbSet<LoginDetail> LoginDetails { get; set; }
        public DbSet<OTP> OTPs { get; set; }
        public DbSet<ShopKeeperAccountDetail> ShopKeeperAccountDetails { get; set; }
        public DbSet<ShopKeeperAccountNumber> ShopKeeperAccountNumbers { get; set; }
        public DbSet<ShopKeeperDetail> ShopKeeperDetails { get; set; }
        public DbSet<ShopKeeperRechargeDetail> ShopKeeperRechargeDetails { get; set; }
        public DbSet<ShopKeeperSmartCardMaster> ShopKeeperSmartCardMasters { get; set; }
        public DbSet<ShopKeeperTerminalDetail> ShopKeeperTerminalDetails { get; set; }
        public DbSet<ShopKeeperTransactionDetail> ShopKeeperTransactionDetails { get; set; }
        public DbSet<Status> Status { get; set; }
        public DbSet<TransactionType> TransactionTypes { get; set; }
        public DbSet<UserPrivilege> UserPrivileges { get; set; }
    
        public virtual int checkcustomer(string phone, string tagid, string uid, string pin)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var tagidParameter = tagid != null ?
                new ObjectParameter("tagid", tagid) :
                new ObjectParameter("tagid", typeof(string));
    
            var uidParameter = uid != null ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(string));
    
            var pinParameter = pin != null ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("checkcustomer", phoneParameter, tagidParameter, uidParameter, pinParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> cm_sp_balance(Nullable<decimal> number)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("cm_sp_balance", numberParameter);
        }
    
        public virtual int cm_sp_fundstransfer(Nullable<decimal> num1, Nullable<decimal> num2, Nullable<decimal> amount)
        {
            var num1Parameter = num1.HasValue ?
                new ObjectParameter("num1", num1) :
                new ObjectParameter("num1", typeof(decimal));
    
            var num2Parameter = num2.HasValue ?
                new ObjectParameter("num2", num2) :
                new ObjectParameter("num2", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cm_sp_fundstransfer", num1Parameter, num2Parameter, amountParameter);
        }
    
        public virtual ObjectResult<cm_sp_Get_Error_Info_Result> cm_sp_Get_Error_Info()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cm_sp_Get_Error_Info_Result>("cm_sp_Get_Error_Info");
        }
    
        public virtual int cm_sp_is_Customer_Active(string customer)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cm_sp_is_Customer_Active", customerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> cm_sp_is_Customer_Registered(string customer)
        {
            var customerParameter = customer != null ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("cm_sp_is_Customer_Registered", customerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> cm_sp_is_imei_valid(Nullable<long> imei)
        {
            var imeiParameter = imei.HasValue ?
                new ObjectParameter("imei", imei) :
                new ObjectParameter("imei", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("cm_sp_is_imei_valid", imeiParameter);
        }
    
        public virtual int cm_sp_is_NFC_PIN_Active(string pin)
        {
            var pinParameter = pin != null ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cm_sp_is_NFC_PIN_Active", pinParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> cm_sp_is_NFC_PIN_Valid(Nullable<long> pin)
        {
            var pinParameter = pin.HasValue ?
                new ObjectParameter("pin", pin) :
                new ObjectParameter("pin", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("cm_sp_is_NFC_PIN_Valid", pinParameter);
        }
    
        public virtual int cm_sp_register_customer(Nullable<long> pIN, string phoneNumber, Nullable<int> password, Nullable<long> customeraccountno, string loginpassword)
        {
            var pINParameter = pIN.HasValue ?
                new ObjectParameter("PIN", pIN) :
                new ObjectParameter("PIN", typeof(long));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("phoneNumber", phoneNumber) :
                new ObjectParameter("phoneNumber", typeof(string));
    
            var passwordParameter = password.HasValue ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(int));
    
            var customeraccountnoParameter = customeraccountno.HasValue ?
                new ObjectParameter("customeraccountno", customeraccountno) :
                new ObjectParameter("customeraccountno", typeof(long));
    
            var loginpasswordParameter = loginpassword != null ?
                new ObjectParameter("loginpassword", loginpassword) :
                new ObjectParameter("loginpassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cm_sp_register_customer", pINParameter, phoneNumberParameter, passwordParameter, customeraccountnoParameter, loginpasswordParameter);
        }
    
        public virtual int cm_sp_send_sms(string mobileNo, string smstext, ObjectParameter sResponse)
        {
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var smstextParameter = smstext != null ?
                new ObjectParameter("smstext", smstext) :
                new ObjectParameter("smstext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cm_sp_send_sms", mobileNoParameter, smstextParameter, sResponse);
        }
    
        public virtual int cm_sp_unregister_customer(string number)
        {
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cm_sp_unregister_customer", numberParameter);
        }
    }
}
